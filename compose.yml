name: ommnia_system
services:
  redis:
    build: ./config/redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/redis-password
    secrets:
      - redis-password
    networks:
      - backend
    volumes:
      - ./config/redis/redis.conf.template:/usr/local/etc/redis/redis.conf.template:ro
  influxdb2:
    image: influxdb:2.7.11
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb2-data:/var/lib/influxdb2:rw
      - influxdb2-config:/etc/influxdb2:rw
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: ommnia
      DOCKER_INFLUXDB_INIT_BUCKET: ommnia
    networks:
      - backend
  postgres:
    image: postgres:16.8
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    secrets:
      - postgres-user
      - postgres-password
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres-user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-password
      POSTGRES_DB: ommnia_system
    networks:
      - backend
  reverse-proxy:
    image: nginx:1.27.5
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./config/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - spa
      - api
  spa:
    image: ghcr.io/skywa04885/ommnia-system-spa:${VERSION}
    restart: unless-stopped
    networks:
      - frontend
  api:
    image: ghcr.io/skywa04885/ommnia-system-api:${VERSION}
    restart: unless-stopped
    environment:
      DB_USER_FILE: /run/secrets/postgres-user
      DB_PASS_FILE: /run/secrets/postgres-password
      DB_URL: jdbc:postgresql://postgres:5432/ommnia_system
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DATABASE: 0
      REDIS_PASSWORD_FILE: /run/secrets/redis-password
      INFLUXDB2_BUCKET: ommnia
      INFLUXDB2_ORG: ommnia
      INFLUXDB2_URL: http://influxdb2:8086/
      INFLUXDB2_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      S3_REGION_FILE: /run/secrets/s3-region
      S3_ACCESS_KEY_FILE: /run/secrets/s3-access-key
      S3_SECRET_KEY_FILE: /run/secrets/s3-secret-key
      S3_ENDPOINT_FILE: /run/secrets/s3-endpoint
      S3_UPLOAD_BUCKET_FILE: /run/secrets/s3-upload-bucket
      MAILGUN_BASE_URL_FILE: /run/secrets/mailgun-base-url
      MAILGUN_API_KEY_FILE: /run/secrets/mailgun-api-key
      MAILGUN_DOMAIN_FILE: /run/secrets/mailgun-domain
    env_file:
      - .env.api
    secrets:
      - postgres-user
      - postgres-password
      - influxdb2-admin-token
      - s3-region
      - s3-access-key
      - s3-secret-key
      - s3-endpoint
      - s3-upload-bucket
      - mailgun-base-url
      - mailgun-api-key
      - mailgun-domain
      - redis-password
    networks:
      - backend
      - frontend
    depends_on:
      - redis
      - postgres
      - influxdb2
secrets:
  mailgun-base-url:
    file: .env.mailgun-base-url
  mailgun-api-key:
    file: .env.mailgun-api-key
  mailgun-domain:
    file: .env.mailgun-domain
  redis-password:
    file: .env.redis-password
  postgres-user:
    file: .env.postgres-user
  postgres-password:
    file: .env.postgres-password
  influxdb2-admin-username:
    file: .env.influxdb2-admin-username
  influxdb2-admin-password:
    file: .env.influxdb2-admin-password
  influxdb2-admin-token:
    file: .env.influxdb2-admin-token
  s3-region:
    file: .env.s3-region
  s3-access-key:
    file: .env.s3-access-key
  s3-secret-key:
    file: .env.s3-secret-key
  s3-endpoint:
    file: .env.s3-endpoint
  s3-upload-bucket:
    file: .env.s3-upload-bucket
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  influxdb2-data:
  influxdb2-config:
  postgres-data:
